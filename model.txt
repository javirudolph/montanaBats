
model {
  # Priors and model for params
  int.psi ~ dunif(0,1)         # Intercept of occupancy probability
  for(t in 1:n.sites){
    int.theta[t] ~ dunif(0,1) # Intercepts availability probability
  }
  for(t in 1:n.surveys){
    int.p[t] ~ dunif(0,1)     # Intercepts detection probability
  }
  beta.lpsi ~ dnorm(0, 0.1)    # Slopes of three covariates
  beta.ltheta ~ dnorm(0, 0.1)
  beta.lp ~ dnorm(0, 0.1)
  # 'Likelihood' (or basic model structure)
  for (i in 1:n.cell){
    # Occurrence in pond i
    z[i] ~ dbern(psi[i])
    logit(psi[i]) <- logit(int.psi) + beta.lpsi * covA[i]
    for (j in 1:n.sites){
      # Occurrence in sample j
      a[i,j] ~ dbern(mu.a[i,j])
      mu.a[i,j] <- z[i] * theta[i,j]
      logit(theta[i,j]) <- logit(int.theta[j]) + beta.ltheta * covB[i,j]
      for (k in 1:n.surveys){
        # PCR detection error process in sample k
        y[i,j,k] ~ dbern(mu.y[i,j,k])
        mu.y[i,j,k] <- a[i,j] * p[i,j,k]
        logit(p[i,j,k]) <- logit(int.p[k]) + beta.lp * covC[i,j,k]
      }
    }
    tmp[i] <- step(sum(a[i,])-0.1)
  }
  # Derived quantities
  sum.z <- sum(z[])   # Total # of occupied ponds in sample
  sum.a <- sum(tmp[]) # Total # of ponds with presence in <=1 of the 5 samples
} # end model

