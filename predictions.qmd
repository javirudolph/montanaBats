---
title: "Multistate occupancy predictions"
format:
  html:
    code-fold: true
    code-summary: "Show the code"
execute: 
  echo: false
---

# Overview 

We are generating predictions at the grid cell scale (10x10km) using a set of covariates from the latest NABat report. We are focusing on the state of Montana, and incorporating different jurisdictions that may or may not implement all management actions. 

## Data sources 
Covariate data and grids are coming from NABat 

```{r libs}
#| message: false

# Libraries
library(tidyverse)
library(sf)
library(jagsUI)
library(scales)

```

```{r load_data}

## COVARIATES --------
mt_covariates <- readRDS("datafiles/mt_covariates.RDS") %>% 
  # Abbreviate jurisdiction names
    mutate(jurisd_abbr = case_when(
    jurisdiction == "Montana Fish, Wildlife, and Parks" ~ "MFWP",
    jurisdiction == "US Bureau of Land Management" ~ "BLM",
    jurisdiction == "US Forest Service" ~ "USFS",
    jurisdiction == "Reservations" ~ "Res",
    jurisdiction == "US Fish and Wildlife Service" ~ "USFWS",
    jurisdiction == "National Park Service" ~ "NPS",
    jurisdiction == "Montana Department of Natural Resources and Conservation" ~ "DNRC"
    ))

grid_geometry <- mt_covariates %>% 
  select(GRTS_ID)
```

```{css, echo=FALSE}
.panel-tabset .nav-item {
  font-size: 12px;
}
```

# Model Description 
## Basic model structure 

We consider a basic dynamic model with a Markovian structure, in which the state of each year is dependent on the state of the previous year. Transition probabilities (the probability of a site going from one state to another, or remaining in the same state the following year) are determined as functions of colonization and survival rates.

We start by determining the initial state for each site $i$, which follows a multinomial distribution: 

$$
z_{i,1} \sim Categorical(\Omega_i)
$$

where $\Omega_i$ is the state vector, with the probabilities of each site $i$ being in one of the states ($1,2,3$) on the first year ($t=1$), given by:

$$
\Omega_i = [\phi_1 \quad \phi_2 \quad \phi_3]
$$
The probability of a site being empty or unoccupied (state $1$) the first year is given by $\phi_1$, the probability of site $i$ having a few bats or many bats the first year is given by $\phi_2$ and $\phi_3$ respectively, where the subscript indicates the state.
Since the probabilities have to add up to 1, we can write the state vector probabilities in terms of one another, we reparameterize to: 

$$
\Omega_i = [1-\psi \quad \psi(1-r) \quad \psi r]_i
$$
where $\psi$ is the probability of a site being occupied and $r$ is the probability of an occupied site having *many bats*, thus the probability that a site is occupied with a *few bats* ($\psi(1-r)$) is equivalent to the probability that a sites is occupied ($\psi$) AND it is **not** occupied by many bats ($1-r$).


The state of each site $i$ in the following years ($t = 2 \dots T$) is given by: 

$$
z_{i,t}|z_{i,t-1} \sim Categorical(\Phi_{z{(t-1)}, z{(t)}, i, t})
$$
where the transition matrix determines the probabilities of a site going from one state to another, or remaining in the same state, depending on the state it was in on the previous year: 

$$
\Phi_{z{(t-1)}, z{(t)}, i,t} =  \begin{bmatrix}
                                \pi_{11} & \pi_{12} & \pi_{13} \\
                                \pi_{21} & \pi_{22} & \pi_{23} \\
                                \pi_{31} & \pi_{32} & \pi_{33}
                                \end{bmatrix}_{i,t}
$$
we can read $\pi_{n,m,i,t}$ as the probability that site $i$ transitions from state $n$ in year $t-1$ to state $m$ in year $t$. We reparameterize this transition matrix in terms of colonization ($\gamma$) and persistence ($\phi$), plus growth $G$ or decline $D$ when moving between the states of *few* and *many bats*. 

$$
\Phi_{z{(t-1)}, z{(t)}} =  \begin{bmatrix}
                                1-\gamma & \gamma & 0 \\
                                1-\phi_1 & \phi_1(1-G) &  \phi_1G\\
                                1-\phi_2 & \phi_2D & \phi_2(1 - D)
                                \end{bmatrix}
$$


Both the initial state vector $\Omega_i$ and the transition matrix $\Phi$ can be reparameterized in order to have these probabilities in terms of environmental covariates, which can then be modified by different management actions.

## Including covariates

Initially, I am only using covariates that NABAt used for their report, where the data release is found [here](https://www.sciencebase.gov/catalog/item/620e6f3bd34e6c7e83baa603), and the report [here](https://ecos.fws.gov/ServCat/Reference/Profile/144755). Descriptions on how these covariates were obtained and aggregated at the cell level are found in the report. Briefly, 

-   Physiographic diversity on page 8 of the report - it's a measure of landscape complexity: ruggedness [source](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0143619)

-   Ecoregions could be very useful as they describe habitat features descriptions for ecoregions are [here](https://www.epa.gov/eco-research/level-iii-and-iv-ecoregions-continental-united-states) and the [paper](https://link.springer.com/article/10.1007/s00267-014-0364-1)
    -   in the report they mention these can be used to account for spatial autocorrelation seems like in their model they use these as the intercept

-   karst - grid cells that intersect karst polygons get a 1, source is this [paper](https://link.springer.com/article/10.1007/s10040-016-1519-3)  karst indicator was included to capture the effect of caves

-   riverlake variable is a 1 if the grid intersects rivers or shorelines

- For detection-level covariates they extracted the data from [here](https://daac.ornl.gov/cgi-bin/dsviewer.pl?ds_id=1852)
    - These depend on the specific night and where not provided in the data release 
    
    
Based on the MYLU ecological model presented in the report, I included the following covariates as predictors for the initial state occupancy:

With state vector,

$$
\Omega_i = [1-\psi \quad \psi(1-r) \quad \psi r]_i
$$

the probability of occupancy for site $i$, $\psi_i$ is set as: 

$$
\begin{align*}
logit(\psi_i) = \beta_0 + \beta_1 \cdot \text{Elevation} + \beta_2 \cdot \text{Elevation}^2 +
\beta_3 \cdot \text{Temp} + \beta_4 \cdot \text{Temp}^2 + \\
\beta_5 \cdot \text{Physiographic diversity} +
\beta_6 \cdot \text{Precipitation} + \\
\beta_7 \cdot \text{Percent Forest} + \beta_8 \cdot \text{Percent Wetlands}
\end{align*}
$$

What we think could influence whether there are only a few or many bats could be related to caves (karst), percent forest, and ruggedness (physiographic diversity)

$$
logit(r_i) = \beta_0 + \beta_1 \cdot \text{karst} + \beta_2 \cdot \text{Percent Forest} + 
                \beta_3 \cdot \text{Physiographic diversity}
$$
For both parameters, I included the ecoregion with the intercept, so we have region-specific intercepts

## Setting parameters 
Which would describe the parameters I made

# Covariates 
All the information from the report regarding the different covariates they used for their analysis.

## Ecoregions

:::{.panel-tabset}

## Eco1
```{r}
ggplot(data = mt_covariates) + geom_sf(aes(fill = eco1_name))
```

## Eco2
```{r}
ggplot(data = mt_covariates) + geom_sf(aes(fill = eco2_name))
```

## Eco3
```{r}
ggplot(data = mt_covariates) + geom_sf(aes(fill = eco3_name))
```
:::

## Covariates

:::{.panel-tabset}
## Elev
```{r}
ggplot(data = mt_covariates) + geom_sf(aes(fill = DEM_max))
```

## Temp
```{r}
ggplot(data = mt_covariates) + geom_sf(aes(fill = mean_temp))
```

## Physdiv
```{r}
ggplot(data = mt_covariates) + geom_sf(aes(fill = physio_div))
```

## Precip
```{r}
ggplot(data = mt_covariates) + geom_sf(aes(fill = precip))
```

## Forest
```{r}
ggplot(data = mt_covariates) + geom_sf(aes(fill = p_forest))
```

## Wetland
```{r}
ggplot(data = mt_covariates) + geom_sf(aes(fill = p_wetland))
```


:::


# Jurisdictions
We overlayed a jurisdiction map from the Montana state library and saw which jurisdictions overlapped with different grid cells. Below you can see the different jurisdictions we have considered. 

```{r jurisd_plots}

# List of jurisdictions for color matching
jurisd_list <- unique(mt_covariates$jurisdiction[!is.na(mt_covariates$jurisdiction)])
jurisd_list_abbr <- unique(mt_covariates$jurisd_abbr[!is.na(mt_covariates$jurisd_abbr)])
n_jurisd <- length(jurisd_list)

# get colors
jurisd_cols <- brewer_pal(palette = "Dark2")(n_jurisd)
names(jurisd_cols) <- jurisd_list_abbr

# all jurisdictions
mt_covariates %>% 
  ggplot() +
  geom_sf(color = "black", aes(fill = jurisd_abbr)) +
  labs(fill = "Jurisdiction") +
  scale_fill_manual(values = jurisd_cols) -> all_jurisd_plot

# vis independently
jurisd_plot_list <- list()
for(i in 1:length(jurisd_cols)){
  jurisd_plot_list[[i]] <- mt_covariates %>% 
    filter(jurisdiction == jurisd_list[i]) %>% 
    ggplot() +
      geom_sf(data = grid_geometry) + 
      geom_sf(color = "black", fill = jurisd_cols[i]) +
      labs(title = jurisd_list[i], fill = "Jurisdiction")
}


```

::: {.panel-tabset}

## ALL
```{r}
all_jurisd_plot
```

## MFWP
```{r}
jurisd_plot_list[[1]]
```

## BLM
```{r}
jurisd_plot_list[[2]]
```

## USFS
```{r}
jurisd_plot_list[[3]]
```

## Res
```{r}
jurisd_plot_list[[4]]
```

## USFWS
```{r}
jurisd_plot_list[[5]]
```

## NPS
```{r}
jurisd_plot_list[[6]]
```

## DNRC
```{r}
jurisd_plot_list[[7]]
```
:::

# MORE

```{r set_params}

## CELL LEVEL --------

# intercepts
alpha.lpsi <- c(0, 1.968, 1.719, 1.126, 0.150, 1.134, 0.332)
alpha.lr <- c(0, 0.115, -0.409, 0.321, 0.871, -0.465, 0.855)

# Coefficients
beta.lpsi <- c(0.64, 5.3, 1.2, 4.6, 0.15, 1.054, 0.051, -0.029)
beta.lr <- c(0.566, -0.43, 0.346)



# build the parameters psi and r based on covariates
# center and scale the covariates
center_scale <- function(x){
  center <- mean(x, na.rm = TRUE)
  x <- x - center
  scale <- sd(x, na.rm=TRUE)
  x <- x / scale
  x
}

mt_covariates %>% 
  st_drop_geometry() %>% 
  transmute(GRTS_ID,
            elev = center_scale(DEM_max),
            forest = center_scale(p_forest),
            temp = center_scale(mean_temp),
            precip = center_scale(precip),
            wetlands = center_scale(p_wetland),
            physdiv = center_scale(physio_div),
            karst = karst,
            region = as.numeric(as.factor(eco3_name))) -> scaled_covariates


scaled_covariates %>% 
  # st_drop_geometry() %>% 
  transmute(GRTS_ID,
            lpsi = alpha.lpsi[as.numeric(region)] + beta.lpsi[1] * elev + beta.lpsi[2] * elev^2 + beta.lpsi[3] * temp + beta.lpsi[4] * temp^2 + beta.lpsi[5] * physdiv + beta.lpsi[6] * precip + beta.lpsi[7] * forest + beta.lpsi[8] * wetlands,
            psi = exp(lpsi)/(1+exp(lpsi)),
            lr = alpha.lr[as.numeric(region)] + beta.lr[1] * karst + beta.lr[2] * forest + beta.lr[3] * physdiv,
            r = exp(lr)/(1+exp(lr))) -> psi_and_r

psi <- psi_and_r$psi
r <- psi_and_r$r
Omega <- matrix(c(1-psi, psi*(1-r), psi*r), ncol = 3)

ncells <- nrow(scaled_covariates)
nyears <- 5
z <- array(NA, dim = c(ncells, nyears))

# Calculate state for each cell in year 1
for(i in 1:ncells){
  draw1 <- rmultinom(1,1,Omega[i,])
  z[i,1] <- which(draw1 == 1)
}

# Viz year 1
cbind(grid_geometry, z1 = z[,1]) %>% 
  mutate(z1 = as.factor(z1)) %>% 
  ggplot() +
  geom_sf(aes(fill = z1, color = z1))

# Define transition probability matrix (Phi)
# for now, just using the same matrix for all sites and all years.
gamma1 <- 0.001
gamma2 <- 0.001
phi1 <- 0.5
G <- 0.01
phi2 <- 0.3
D <- 0.5

Phi <- matrix(c(1-gamma1, gamma1*(1-gamma2), gamma1*gamma2,
                1-phi1, phi1*(1-G), phi1*G,
                1-phi2, phi2*D, phi2*(1-D)), nrow = 3, byrow = TRUE)

# fill the next years
for(t in 2:nyears){
  for(i in 1:ncells){
    draw1 <- rmultinom(1,1,Phi[z[i,t-1],])
    z[i,t] <- which(draw1 == 1)
  }
}

# Viz year 1
as.data.frame(z) %>% 
  cbind(grid_geometry, .) %>% 
  pivot_longer(., cols = starts_with("V"), names_to = "year", values_to = "yms") %>% 
  mutate(yms = as.factor(yms)) -> yms_prediction

# viz all
yms_prediction %>% 
  ggplot() +
  facet_wrap(~year) +
  geom_sf(aes(fill = yms, color = yms))

```









